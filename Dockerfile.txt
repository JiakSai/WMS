FROM php:8.3-fpm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    gnupg2 \
    iputils-ping \
    telnet \
    wget \
    libzip-dev \
    default-mysql-server \
    default-mysql-client \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip \
    && docker-php-ext-enable zip

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Install ODBC and MSSQL drivers
RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /usr/share/keyrings/microsoft-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/microsoft-archive-keyring.gpg] https://packages.microsoft.com/debian/12/prod bookworm main" > /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 mssql-tools unixodbc-dev && \
    apt-get install -y libgssapi-krb5-2

# Modify the OpenSSL configuration file
RUN sed -i 's/openssl_conf = openssl_init/openssl_conf = default_conf/' /etc/ssl/openssl.cnf && \
    echo "\n[ default_conf ]\nssl_conf = ssl_sect\n\n[ssl_sect]\nsystem_default = system_default_sect\n\n[system_default_sect]\nMinProtocol = TLSv1.2\nCipherString = DEFAULT@SECLEVEL=0" >> /etc/ssl/openssl.cnf

# Add sqlcmd to PATH for all users
RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> /etc/profile.d/mssql-tools.sh

# Install sqlsrv and pdo_sqlsrv extensions
RUN pecl install sqlsrv pdo_sqlsrv && \
    docker-php-ext-enable sqlsrv pdo_sqlsrv

# Set working directory
WORKDIR /var/www

# Copy existing application directory contents
COPY . .

# Set permissions for Laravel storage and bootstrap/cache directories
RUN chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache && \
    chmod -R 775 /var/www/storage /var/www/bootstrap/cache

# Install Composer dependencies
RUN composer install --no-dev --optimize-autoloader

# Initialize MySQL data directory and create a non-root user
RUN mkdir -p /var/run/mysqld && chown -R mysql:mysql /var/run/mysqld && \
    mkdir -p /var/lib/mysql && chown -R mysql:mysql /var/lib/mysql && \
    mysql_install_db --user=mysql --ldata=/var/lib/mysql

# Expose port 9000 for Laravel's built-in server
EXPOSE 9000

# Start MySQL and Laravel's built-in server
CMD ["sh", "-c", "mysqld_safe --user=mysql & \
    while ! mysqladmin ping --host=127.0.0.1 --silent; do sleep 1; done && \
    mysql -u root -e \"CREATE DATABASE IF NOT EXISTS wms_local;\" && \
    mysql -u root -e \"CREATE USER IF NOT EXISTS 'root_local'@'%' IDENTIFIED BY 'P@ssw0rd';\" && \
    mysql -u root -e \"GRANT ALL PRIVILEGES ON wms_local.* TO 'root_local'@'%';\" && \
    mysql -u root -e \"FLUSH PRIVILEGES;\" && \
    php artisan migrate --seed && \
    php artisan serve --host=0.0.0.0 --port=9000"]